{
  "contractName": "VideosSharing",
  "abi": [
    {
      "name": "Transfer",
      "inputs": [
        {
          "type": "address",
          "name": "_from",
          "indexed": true
        },
        {
          "type": "address",
          "name": "_to",
          "indexed": true
        },
        {
          "type": "uint256",
          "name": "_value",
          "indexed": false
        }
      ],
      "anonymous": false,
      "type": "event"
    },
    {
      "name": "Approval",
      "inputs": [
        {
          "type": "address",
          "name": "_owner",
          "indexed": true
        },
        {
          "type": "address",
          "name": "_spender",
          "indexed": true
        },
        {
          "type": "uint256",
          "name": "_value",
          "indexed": false
        }
      ],
      "anonymous": false,
      "type": "event"
    },
    {
      "name": "UploadVideo",
      "inputs": [
        {
          "type": "address",
          "name": "_user",
          "indexed": true
        },
        {
          "type": "uint256",
          "name": "_index",
          "indexed": false
        }
      ],
      "anonymous": false,
      "type": "event"
    },
    {
      "name": "LikeVideo",
      "inputs": [
        {
          "type": "address",
          "name": "_video_liker",
          "indexed": true
        },
        {
          "type": "address",
          "name": "_video_uploader",
          "indexed": true
        },
        {
          "type": "uint256",
          "name": "_index",
          "indexed": false
        }
      ],
      "anonymous": false,
      "type": "event"
    },
    {
      "name": "UnlikeVideo",
      "inputs": [
        {
          "type": "address",
          "name": "_video_liker",
          "indexed": true
        },
        {
          "type": "address",
          "name": "_video_uploader",
          "indexed": true
        },
        {
          "type": "uint256",
          "name": "_index",
          "indexed": false
        }
      ],
      "anonymous": false,
      "type": "event"
    },
    {
      "name": "DislikeVideo",
      "inputs": [
        {
          "type": "address",
          "name": "_video_liker",
          "indexed": true
        },
        {
          "type": "address",
          "name": "_video_uploader",
          "indexed": true
        },
        {
          "type": "uint256",
          "name": "_index",
          "indexed": false
        }
      ],
      "anonymous": false,
      "type": "event"
    },
    {
      "name": "UndislikeVideo",
      "inputs": [
        {
          "type": "address",
          "name": "_video_liker",
          "indexed": true
        },
        {
          "type": "address",
          "name": "_video_uploader",
          "indexed": true
        },
        {
          "type": "uint256",
          "name": "_index",
          "indexed": false
        }
      ],
      "anonymous": false,
      "type": "event"
    },
    {
      "name": "Subscribe",
      "inputs": [
        {
          "type": "address",
          "name": "_user_from",
          "indexed": true
        },
        {
          "type": "address",
          "name": "_user_to",
          "indexed": true
        }
      ],
      "anonymous": false,
      "type": "event"
    },
    {
      "name": "Unsubscribe",
      "inputs": [
        {
          "type": "address",
          "name": "_user_from",
          "indexed": true
        },
        {
          "type": "address",
          "name": "_user_to",
          "indexed": true
        }
      ],
      "anonymous": false,
      "type": "event"
    },
    {
      "name": "BuyTokens",
      "inputs": [
        {
          "type": "address",
          "name": "_buyer",
          "indexed": true
        },
        {
          "type": "uint256",
          "name": "_amount",
          "indexed": false
        }
      ],
      "anonymous": false,
      "type": "event"
    },
    {
      "name": "SellTokens",
      "inputs": [
        {
          "type": "address",
          "name": "_seller",
          "indexed": true
        },
        {
          "type": "uint256",
          "name": "_amount",
          "indexed": false
        }
      ],
      "anonymous": false,
      "type": "event"
    },
    {
      "outputs": [],
      "inputs": [],
      "constant": false,
      "payable": false,
      "type": "constructor"
    },
    {
      "name": "balanceOf",
      "outputs": [
        {
          "type": "uint256",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "address",
          "name": "_owner"
        }
      ],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 667
    },
    {
      "name": "transfer",
      "outputs": [
        {
          "type": "bool",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "address",
          "name": "_to"
        },
        {
          "type": "uint256",
          "name": "_amount"
        }
      ],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 75157
    },
    {
      "name": "transferFrom",
      "outputs": [
        {
          "type": "bool",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "address",
          "name": "_from"
        },
        {
          "type": "address",
          "name": "_to"
        },
        {
          "type": "uint256",
          "name": "_value"
        }
      ],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 110896
    },
    {
      "name": "approve",
      "outputs": [
        {
          "type": "bool",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "address",
          "name": "_spender"
        },
        {
          "type": "uint256",
          "name": "_amount"
        }
      ],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 37815
    },
    {
      "name": "allowance",
      "outputs": [
        {
          "type": "uint256",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "address",
          "name": "_owner"
        },
        {
          "type": "address",
          "name": "_spender"
        }
      ],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 971
    },
    {
      "name": "upload_video",
      "outputs": [
        {
          "type": "bool",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "bytes",
          "name": "_video_path"
        },
        {
          "type": "bytes",
          "name": "_video_title"
        }
      ],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 426364
    },
    {
      "name": "latest_videos_index",
      "outputs": [
        {
          "type": "uint256",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "address",
          "name": "_user"
        }
      ],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 877
    },
    {
      "name": "videos_path",
      "outputs": [
        {
          "type": "bytes",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "address",
          "name": "_user"
        },
        {
          "type": "uint256",
          "name": "_index"
        }
      ],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 12000
    },
    {
      "name": "videos_title",
      "outputs": [
        {
          "type": "bytes",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "address",
          "name": "_user"
        },
        {
          "type": "uint256",
          "name": "_index"
        }
      ],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 37761
    },
    {
      "name": "rename_videos_title",
      "outputs": [
        {
          "type": "bool",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "address",
          "name": "_user"
        },
        {
          "type": "uint256",
          "name": "_index"
        },
        {
          "type": "bytes",
          "name": "_new_video_title"
        }
      ],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 282800
    },
    {
      "name": "like_video",
      "outputs": [
        {
          "type": "bool",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "address",
          "name": "_user"
        },
        {
          "type": "uint256",
          "name": "_index"
        }
      ],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 283264
    },
    {
      "name": "dislike_video",
      "outputs": [
        {
          "type": "bool",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "address",
          "name": "_user"
        },
        {
          "type": "uint256",
          "name": "_index"
        }
      ],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 208374
    },
    {
      "name": "video_has_been_liked",
      "outputs": [
        {
          "type": "bool",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "address",
          "name": "_user_like"
        },
        {
          "type": "address",
          "name": "_user_video"
        },
        {
          "type": "uint256",
          "name": "_index"
        }
      ],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 2313
    },
    {
      "name": "video_has_been_disliked",
      "outputs": [
        {
          "type": "bool",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "address",
          "name": "_user_dislike"
        },
        {
          "type": "address",
          "name": "_user_video"
        },
        {
          "type": "uint256",
          "name": "_index"
        }
      ],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 2343
    },
    {
      "name": "video_aggregate_likes",
      "outputs": [
        {
          "type": "uint256",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "address",
          "name": "_user_video"
        },
        {
          "type": "uint256",
          "name": "_index"
        }
      ],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 2256
    },
    {
      "name": "video_aggregate_dislikes",
      "outputs": [
        {
          "type": "uint256",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "address",
          "name": "_user_video"
        },
        {
          "type": "uint256",
          "name": "_index"
        }
      ],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 2286
    },
    {
      "name": "subscribe_user",
      "outputs": [
        {
          "type": "bool",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "address",
          "name": "_user_to"
        }
      ],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 225094
    },
    {
      "name": "user_has_subscribed",
      "outputs": [
        {
          "type": "bool",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "address",
          "name": "_user_from"
        },
        {
          "type": "address",
          "name": "_user_to"
        }
      ],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 2385
    },
    {
      "name": "user_aggregate_subscribers",
      "outputs": [
        {
          "type": "uint256",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "address",
          "name": "_user"
        }
      ],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1267
    },
    {
      "name": "buyTokens",
      "outputs": [
        {
          "type": "bool",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "uint256",
          "name": "_numberOfTokens"
        }
      ],
      "constant": false,
      "payable": true,
      "type": "function",
      "gas": 152454
    },
    {
      "name": "sellTokens",
      "outputs": [
        {
          "type": "bool",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "uint256",
          "name": "_numberOfTokens"
        }
      ],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 186933
    },
    {
      "name": "getContractEthBalance",
      "outputs": [
        {
          "type": "uint256",
          "unit": "wei",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1695
    },
    {
      "name": "withdrawContractEthBalance",
      "outputs": [
        {
          "type": "bool",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "uint256",
          "name": "_amount"
        }
      ],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 36637
    },
    {
      "constant": false,
      "payable": true,
      "type": "fallback"
    },
    {
      "name": "getBuyTimeStampValue",
      "outputs": [
        {
          "type": "uint256",
          "unit": "sec",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "address",
          "name": "_user"
        }
      ],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1417
    },
    {
      "name": "getSellTimeStampValue",
      "outputs": [
        {
          "type": "uint256",
          "unit": "sec",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "address",
          "name": "_user"
        }
      ],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1447
    },
    {
      "name": "destroyEntireSmartContract",
      "outputs": [
        {
          "type": "bool",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": false,
      "payable": true,
      "type": "function",
      "gas": 26484
    },
    {
      "name": "name",
      "outputs": [
        {
          "type": "bytes",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 7114
    },
    {
      "name": "symbol",
      "outputs": [
        {
          "type": "bytes",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 7144
    },
    {
      "name": "totalSupply",
      "outputs": [
        {
          "type": "uint256",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1413
    },
    {
      "name": "decimals",
      "outputs": [
        {
          "type": "uint256",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1443
    },
    {
      "name": "tokenBuyPrice",
      "outputs": [
        {
          "type": "uint256",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1473
    },
    {
      "name": "tokenSellPrice",
      "outputs": [
        {
          "type": "uint256",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1503
    },
    {
      "name": "tokensSold",
      "outputs": [
        {
          "type": "uint256",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1533
    }
  ],
  "bytecode": "0x740100000000000000000000000000000000000000006020526f7fffffffffffffffffffffffffffffff6040527fffffffffffffffffffffffffffffffff8000000000000000000000000000000060605274012a05f1fffffffffffffffffffffffffdabf41c006080527ffffffffffffffffffffffffed5fa0e000000000000000000000000000000000060a052341561009857600080fd5b6101f4610140526003610160526101405115156100b6576000610148565b61016051600a0a600a1061016051156001610160511417176100d757600080fd5b61016051600a0a6101405161016051600a0a600a10610160511560016101605114171761010357600080fd5b61016051600a0a6101405102041461011a57600080fd5b61016051600a0a600a10610160511560016101605114171761013b57600080fd5b61016051600a0a61014051025b60035560035460053360e05260c052604060c02055600e610180527f446563656e5475626520436f696e0000000000000000000000000000000000006101a05261018080600160c052602060c020602082510161012060006002818352015b826101205160200211156101ba576101dc565b61012051602002850151610120518501555b81516001018083528114156101a7575b50505050505060036101e0527f4454430000000000000000000000000000000000000000000000000000000000610200526101e080600260c052602060c020602082510161012060006002818352015b8261012051602002111561023f57610261565b61012051602002850151610120518501555b815160010180835281141561022c575b5050505050506101605160045533600e556601bda703f0a000600f556601ab76670b6000601055600354610240523360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6020610240a361224856600035601c52740100000000000000000000000000000000000000006020526f7fffffffffffffffffffffffffffffff6040527fffffffffffffffffffffffffffffffff8000000000000000000000000000000060605274012a05f1fffffffffffffffffffffffffdabf41c006080527ffffffffffffffffffffffffed5fa0e000000000000000000000000000000000060a0526370a0823160005114156100da5734156100ac57600080fd5b60043560205181106100bd57600080fd5b50600560043560e05260c052604060c0205460005260206000f350005b6000156101b5575b6101a0526101405261016052610180526101805160056101405160e05260c052604060c02054101561011357600080fd5b60056101405160e05260c052604060c020610180518154101561013557600080fd5b6101805181540381555060056101605160e05260c052604060c020805461018051825401101561016457600080fd5b61018051815401815550610180516101c05261016051610140517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60206101c0a360016000526000516101a0515650005b63a9059cbb60005114156102245734156101ce57600080fd5b60043560205181106101df57600080fd5b506330e0789e610140523361016052600435610180526024356101a0526101a0516101805161016051600658016100e2565b610200526102005160005260206000f350005b6323b872dd600051141561037657341561023d57600080fd5b600435602051811061024e57600080fd5b50602435602051811061026057600080fd5b50600660043560e05260c052604060c0203360e05260c052604060c02054604435111561028c57600080fd5b600560043560e05260c052604060c0205460443511156102ab57600080fd5b600560043560e05260c052604060c020604435815410156102cb57600080fd5b604435815403815550600660043560e05260c052604060c0203360e05260c052604060c0206044358154101561030057600080fd5b604435815403815550600560243560e05260c052604060c0208054604435825401101561032c57600080fd5b604435815401815550604435610140526024356004357fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6020610140a3600160005260206000f350005b63095ea7b3600051141561040057341561038f57600080fd5b60043560205181106103a057600080fd5b5060243560063360e05260c052604060c02060043560e05260c052604060c0205560243561014052600435337f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9256020610140a3600160005260206000f350005b63dd62ed3e600051141561046757341561041957600080fd5b600435602051811061042a57600080fd5b50602435602051811061043c57600080fd5b50600660043560e05260c052604060c02060243560e05260c052604060c0205460005260206000f350005b63e8b60d1f600051141561061357341561048057600080fd5b60526004356004016101403760326004356004013511156104a057600080fd5b60e86024356004016101c03760c86024356004013511156104c057600080fd5b60003360e05260c052604060c020546102e05260073360e05260c052604060c0206102e05160e05260c052604060c02060c052602060c020610140808260c052602060c020602082510161012060006003818352015b826101205160200211156105295761054b565b61012051602002850151610120518501555b8151600101808352811415610516575b5050505050506101c0806001830160c052602060c020602082510161012060006008818352015b82610120516020021115610585576105a7565b61012051602002850151610120518501555b8151600101808352811415610572575b5050505050505060003360e05260c052604060c0208054600182540110156105ce57600080fd5b60018154018155506102e05161030052337f9457126cc33da5a576a4f66ccf42fb671e5231743e8668960837bacc8e4dba9e6020610300a2600160005260206000f350005b633f86f755600051141561065a57341561062c57600080fd5b600435602051811061063d57600080fd5b50600060043560e05260c052604060c0205460005260206000f350005b63707abc3b600051141561076257341561067357600080fd5b600435602051811061068457600080fd5b50600760043560e05260c052604060c02060243560e05260c052604060c02060c052602060c0208060c052602060c020610180602082540161012060006003818352015b826101205160200211156106db576106fd565b61012051850154610120516020028501525b81516001018083528114156106c8575b505050505050610200610180516040818352015b60406102005111156107225761073e565b6000610200516101a001535b8151600101808352811415610711575b50506020610160526040610180510160206001820306601f8201039050610160f350005b638d705226600051141561086d57341561077b57600080fd5b600435602051811061078c57600080fd5b506001600760043560e05260c052604060c02060243560e05260c052604060c02060c052602060c020018060c052602060c020610180602082540161012060006008818352015b826101205160200211156107e657610808565b61012051850154610120516020028501525b81516001018083528114156107d3575b5050505050506102a06101805160e0818352015b60e06102a051111561082d57610849565b60006102a0516101a001535b815160010180835281141561081c575b50506020610160526040610180510160206001820306601f8201039050610160f350005b6365206bd5600051141561095257341561088657600080fd5b600435602051811061089757600080fd5b5060e86044356004016101403760c86044356004013511156108b857600080fd5b60043533146108c657600080fd5b61014080600160073360e05260c052604060c02060243560e05260c052604060c02060c052602060c0200160c052602060c020602082510161012060006008818352015b8261012051602002111561091d5761093f565b61012051602002850151610120518501555b815160010180835281141561090a575b505050505050600160005260206000f350005b6384e234f86000511415610d3757341561096b57600080fd5b600435602051811061097c57600080fd5b50336101405260043561016052602435610180526000610140516020826102600101526020810190506101605160208261026001015260208101905061018051602082610260010152602081019050806102605261026090508051602001806101a0828460006004600a8704601201f16109f557600080fd5b50506000610160516020826103c0010152602081019050610180516020826103c0010152602081019050806103c0526103c09050805160200180610300828460006004600a8704601201f1610a4957600080fd5b5050600060043560e05260c052604060c0205460243510610a6957600080fd5b60086101a0516101c02060e05260c052604060c020541515610c8a57600160096101a0516101c02060e05260c052604060c020541415610ae857600060096101a0516101c02060e05260c052604060c02055600c610300516103202060e05260c052604060c020600181541015610adf57600080fd5b60018154038155505b600160086101a0516101c02060e05260c052604060c02055600b610300516103202060e05260c052604060c020805460018254011015610b2757600080fd5b6001815401815550610140610460525b61046051516020610460510161046052610440610460511015610b5957610b37565b6330e0789e61048052336104a0526004356104c05260046104e0526104e0516104c0516104a051600658016100e2565b61054052610420610460525b6104605152602061046051036104605261014061046051101515610bb857610b95565b61054050610140610560525b61056051516020610560510161056052610560610560511015610be657610bc4565b6330e0789e61058052336105a052600e546105c05260016105e0526105e0516105c0516105a051600658016100e2565b61064052610540610560525b6105605152602061056051036105605261014061056051101515610c4557610c22565b6106405060243561066052600435337fd36bef164b9617b19d82f8fcdec8d9e92ecdec8ec7758ed303e760d580028c466020610660a3600160005260206000f3610d2a565b600160086101a0516101c02060e05260c052604060c020541415610d2957600060086101a0516101c02060e05260c052604060c02055600b610300516103202060e05260c052604060c020600181541015610ce457600080fd5b600181540381555060243561044052600435337f2f8a5504faf7df392dba0c943733d0be4f5577296b01e0cc19cbeb500bf7eed16020610440a3600160005260206000f35b5b600060005260206000f350005b63c52af0ff600051141561108f573415610d5057600080fd5b6004356020518110610d6157600080fd5b50336101405260043561016052602435610180526000610140516020826102600101526020810190506101605160208261026001015260208101905061018051602082610260010152602081019050806102605261026090508051602001806101a0828460006004600a8704601201f1610dda57600080fd5b50506000610160516020826103c0010152602081019050610180516020826103c0010152602081019050806103c0526103c09050805160200180610300828460006004600a8704601201f1610e2e57600080fd5b5050600060043560e05260c052604060c0205460243510610e4e57600080fd5b60096101a0516101c02060e05260c052604060c020541515610fe257600160086101a0516101c02060e05260c052604060c020541415610ecd57600060086101a0516101c02060e05260c052604060c02055600b610300516103202060e05260c052604060c020600181541015610ec457600080fd5b60018154038155505b600160096101a0516101c02060e05260c052604060c02055600c610300516103202060e05260c052604060c020805460018254011015610f0c57600080fd5b6001815401815550610140610460525b61046051516020610460510161046052610440610460511015610f3e57610f1c565b6330e0789e61048052336104a052600e546104c05260056104e0526104e0516104c0516104a051600658016100e2565b61054052610420610460525b6104605152602061046051036104605261014061046051101515610f9d57610f7a565b6105405060243561056052600435337f3e59ec41817a3f5adf0e2fdb076fe3f9cf19354aefd7b55fd8b6a11d173578456020610560a3600160005260206000f3611082565b600160096101a0516101c02060e05260c052604060c02054141561108157600060096101a0516101c02060e05260c052604060c02055600c610300516103202060e05260c052604060c02060018154101561103c57600080fd5b600181540381555060243561044052600435337f856fae1a7746b63eea6a6a83cf787fba808b58908919a9df2ca8057949937e6e6020610440a3600160005260206000f35b5b600060005260206000f350005b6351414d0d60005114156111695734156110a857600080fd5b60043560205181106110b957600080fd5b5060243560205181106110cb57600080fd5b506004356101405260243561016052604435610180526000610140516020826102600101526020810190506101605160208261026001015260208101905061018051602082610260010152602081019050806102605261026090508051602001806101a0828460006004600a8704601201f161114657600080fd5b505060086101a0516101c02060e05260c052604060c0205460005260206000f350005b6368970729600051141561124357341561118257600080fd5b600435602051811061119357600080fd5b5060243560205181106111a557600080fd5b506004356101405260243561016052604435610180526000610140516020826102600101526020810190506101605160208261026001015260208101905061018051602082610260010152602081019050806102605261026090508051602001806101a0828460006004600a8704601201f161122057600080fd5b505060096101a0516101c02060e05260c052604060c0205460005260206000f350005b6325bc2e4b60005114156112f157341561125c57600080fd5b600435602051811061126d57600080fd5b5060043561014052602435610160526000610140516020826102400101526020810190506101605160208261024001015260208101905080610240526102409050805160200180610180828460006004600a8704601201f16112ce57600080fd5b5050600b610180516101a02060e05260c052604060c0205460005260206000f350005b637f5c0b9d600051141561139f57341561130a57600080fd5b600435602051811061131b57600080fd5b5060043561014052602435610160526000610140516020826102400101526020810190506101605160208261024001015260208101905080610240526102409050805160200180610180828460006004600a8704601201f161137c57600080fd5b5050600c610180516101a02060e05260c052604060c0205460005260206000f350005b631f4ff4c660005114156116935734156113b857600080fd5b60043560205181106113c957600080fd5b5033600435186113d857600080fd5b3361014052600435610160526000610140516020826102400101526020810190506101605160208261024001015260208101905080610240526102409050805160200180610180828460006004600a8704601201f161143657600080fd5b5050610160516102c052600a610180516101a02060e05260c052604060c0205415156115f2576001600a610180516101a02060e05260c052604060c02055600d6102c05160e05260c052604060c02080546001825401101561149757600080fd5b60018154018155506101406102e0525b6102e0515160206102e051016102e0526102e06102e05110156114c9576114a7565b6330e0789e61030052336103205260043561034052600461036052610360516103405161032051600658016100e2565b6103c0526102c06102e0525b6102e0515260206102e051036102e0526101406102e05110151561152857611505565b6103c0506101406103e0525b6103e0515160206103e051016103e0526103e06103e051101561155657611534565b6330e0789e610400523361042052600e5461044052600161046052610460516104405161042051600658016100e2565b6104c0526103c06103e0525b6103e0515260206103e051036103e0526101406103e0511015156115b557611592565b6104c050600435337f5ffe3cc8f1055f172e55be8d832143a6cffb4cb3a56a18bf780fd4112d4cecc760006000a3600160005260206000f3611686565b6001600a610180516101a02060e05260c052604060c020541415611685576000600a610180516101a02060e05260c052604060c02055600d6102c05160e05260c052604060c02060018154101561164857600080fd5b6001815403815550600435337f9d3d878d2fb01c43ad7ec7c20d8f5d0dbac4888df940a4edaab4540ccefdc10260006000a3600160005260206000f35b5b600060005260206000f350005b63aeafb39360005114156117535734156116ac57600080fd5b60043560205181106116bd57600080fd5b5060243560205181106116cf57600080fd5b5060043561014052602435610160526000610140516020826102400101526020810190506101605160208261024001015260208101905080610240526102409050805160200180610180828460006004600a8704601201f161173057600080fd5b5050600a610180516101a02060e05260c052604060c0205460005260206000f350005b634c05cede60005114156117aa57341561176c57600080fd5b600435602051811061177d57600080fd5b50600435610140526101405161016052600d6101605160e05260c052604060c0205460005260206000f350005b600015611868575b61018052610140526101605261014051610160516117cf57600080fd5b610160516101405115156117e457600061180a565b6101605161014051610160516101405102041461180057600080fd5b6101605161014051025b041461016051151761181b57600080fd5b61014051151561182c576000611852565b6101605161014051610160516101405102041461184857600080fd5b6101605161014051025b6101a0526101a051600052600051610180515650005b633610724e6000511415611a015760123360e05260c052604060c0205462093a8060123360e05260c052604060c020540110156118a457600080fd5b62093a8060123360e05260c052604060c020540142116118c357600080fd5b63165c4a166101405260043561016052600f54610180526101805161016051600658016117b2565b6101e0526101e05134146118fe57600080fd5b6103e8600435111561190f57600080fd5b6004356005600e5460e05260c052604060c02054101561192e57600080fd5b6101405161016051610180516101a0516101c0516101e0516330e0789e61022052600e5461024052336102605260043561028052610280516102605161024051600658016100e2565b6102e0526101e0526101c0526101a0526101805261016052610140526102e0506011805460043582540110156119ac57600080fd5b6004358154018155504260123360e05260c052604060c0205560043561030052337f4aff2c4e63da20aaa26764b3e97f557bf5e95b76ddba8f97a156abbecb0818466020610300a2600160005260206000f350005b636c11bcd36000511415611bca573415611a1a57600080fd5b60133360e05260c052604060c0205462093a8060133360e05260c052604060c02054011015611a4857600080fd5b62093a8060133360e05260c052604060c02054014211611a6757600080fd5b6103e86004351115611a7857600080fd5b60043560053360e05260c052604060c020541015611a9557600080fd5b6101405163165c4a16610180526004356101a0526010546101c0526101c0516101a051600658016117b2565b610220526101405261022051610140526101405161016051610180516101a0516101c0516101e05161020051610220516330e0789e610260523361028052600e546102a0526004356102c0526102c0516102a05161028051600658016100e2565b6103205261022052610200526101e0526101c0526101a05261018052610160526101405261032050600060006000600061014051336000f1611b6357600080fd5b601160043581541015611b7557600080fd5b6004358154038155504260133360e05260c052604060c0205560043561034052337f4f0a05c98d5132dc12d8adee36e2453f1d5bcfd87ae6c465e0d99e5fc8a3a0ba6020610340a2600160005260206000f350005b634de57d756000511415611bfe573415611be357600080fd5b600e543314611bf157600080fd5b303160005260206000f350005b63eb90b7ad6000511415611c5a573415611c1757600080fd5b600e543314611c2557600080fd5b30316004351115611c3557600080fd5b6000600060006000600435336000f1611c4d57600080fd5b600160005260206000f350005b63904866af6000511415611ca1573415611c7357600080fd5b6004356020518110611c8457600080fd5b50601260043560e05260c052604060c0205460005260206000f350005b6321ac0a3d6000511415611ce8573415611cba57600080fd5b6004356020518110611ccb57600080fd5b50601360043560e05260c052604060c0205460005260206000f350005b630815b9c86000511415611d0a57600e543314611d0457600080fd5b600e54ff005b6306fdde036000511415611ddc573415611d2357600080fd5b60018060c052602060c020610180602082540161012060006002818352015b82610120516020021115611d5557611d77565b61012051850154610120516020028501525b8151600101808352811415611d42575b5050505050506101e0610180516020818352015b60206101e0511115611d9c57611db8565b60006101e0516101a001535b8151600101808352811415611d8b575b50506020610160526040610180510160206001820306601f8201039050610160f350005b6395d89b416000511415611eae573415611df557600080fd5b60028060c052602060c020610180602082540161012060006002818352015b82610120516020021115611e2757611e49565b61012051850154610120516020028501525b8151600101808352811415611e14575b5050505050506101e0610180516020818352015b60206101e0511115611e6e57611e8a565b60006101e0516101a001535b8151600101808352811415611e5d575b50506020610160526040610180510160206001820306601f8201039050610160f350005b6318160ddd6000511415611ed5573415611ec757600080fd5b60035460005260206000f350005b63313ce5676000511415611efc573415611eee57600080fd5b60045460005260206000f350005b63dbf9f6526000511415611f23573415611f1557600080fd5b600f5460005260206000f350005b6366b57cb56000511415611f4a573415611f3c57600080fd5b60105460005260206000f350005b63518ab2a86000511415611f71573415611f6357600080fd5b60115460005260206000f350005b600e543314611f7f57600080fd5b600160005260206000f35b6102be612248036102be6000396102be612248036000f3",
  "deployedBytecode": "0x600035601c52740100000000000000000000000000000000000000006020526f7fffffffffffffffffffffffffffffff6040527fffffffffffffffffffffffffffffffff8000000000000000000000000000000060605274012a05f1fffffffffffffffffffffffffdabf41c006080527ffffffffffffffffffffffffed5fa0e000000000000000000000000000000000060a0526370a0823160005114156100da5734156100ac57600080fd5b60043560205181106100bd57600080fd5b50600560043560e05260c052604060c0205460005260206000f350005b6000156101b5575b6101a0526101405261016052610180526101805160056101405160e05260c052604060c02054101561011357600080fd5b60056101405160e05260c052604060c020610180518154101561013557600080fd5b6101805181540381555060056101605160e05260c052604060c020805461018051825401101561016457600080fd5b61018051815401815550610180516101c05261016051610140517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60206101c0a360016000526000516101a0515650005b63a9059cbb60005114156102245734156101ce57600080fd5b60043560205181106101df57600080fd5b506330e0789e610140523361016052600435610180526024356101a0526101a0516101805161016051600658016100e2565b610200526102005160005260206000f350005b6323b872dd600051141561037657341561023d57600080fd5b600435602051811061024e57600080fd5b50602435602051811061026057600080fd5b50600660043560e05260c052604060c0203360e05260c052604060c02054604435111561028c57600080fd5b600560043560e05260c052604060c0205460443511156102ab57600080fd5b600560043560e05260c052604060c020604435815410156102cb57600080fd5b604435815403815550600660043560e05260c052604060c0203360e05260c052604060c0206044358154101561030057600080fd5b604435815403815550600560243560e05260c052604060c0208054604435825401101561032c57600080fd5b604435815401815550604435610140526024356004357fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6020610140a3600160005260206000f350005b63095ea7b3600051141561040057341561038f57600080fd5b60043560205181106103a057600080fd5b5060243560063360e05260c052604060c02060043560e05260c052604060c0205560243561014052600435337f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9256020610140a3600160005260206000f350005b63dd62ed3e600051141561046757341561041957600080fd5b600435602051811061042a57600080fd5b50602435602051811061043c57600080fd5b50600660043560e05260c052604060c02060243560e05260c052604060c0205460005260206000f350005b63e8b60d1f600051141561061357341561048057600080fd5b60526004356004016101403760326004356004013511156104a057600080fd5b60e86024356004016101c03760c86024356004013511156104c057600080fd5b60003360e05260c052604060c020546102e05260073360e05260c052604060c0206102e05160e05260c052604060c02060c052602060c020610140808260c052602060c020602082510161012060006003818352015b826101205160200211156105295761054b565b61012051602002850151610120518501555b8151600101808352811415610516575b5050505050506101c0806001830160c052602060c020602082510161012060006008818352015b82610120516020021115610585576105a7565b61012051602002850151610120518501555b8151600101808352811415610572575b5050505050505060003360e05260c052604060c0208054600182540110156105ce57600080fd5b60018154018155506102e05161030052337f9457126cc33da5a576a4f66ccf42fb671e5231743e8668960837bacc8e4dba9e6020610300a2600160005260206000f350005b633f86f755600051141561065a57341561062c57600080fd5b600435602051811061063d57600080fd5b50600060043560e05260c052604060c0205460005260206000f350005b63707abc3b600051141561076257341561067357600080fd5b600435602051811061068457600080fd5b50600760043560e05260c052604060c02060243560e05260c052604060c02060c052602060c0208060c052602060c020610180602082540161012060006003818352015b826101205160200211156106db576106fd565b61012051850154610120516020028501525b81516001018083528114156106c8575b505050505050610200610180516040818352015b60406102005111156107225761073e565b6000610200516101a001535b8151600101808352811415610711575b50506020610160526040610180510160206001820306601f8201039050610160f350005b638d705226600051141561086d57341561077b57600080fd5b600435602051811061078c57600080fd5b506001600760043560e05260c052604060c02060243560e05260c052604060c02060c052602060c020018060c052602060c020610180602082540161012060006008818352015b826101205160200211156107e657610808565b61012051850154610120516020028501525b81516001018083528114156107d3575b5050505050506102a06101805160e0818352015b60e06102a051111561082d57610849565b60006102a0516101a001535b815160010180835281141561081c575b50506020610160526040610180510160206001820306601f8201039050610160f350005b6365206bd5600051141561095257341561088657600080fd5b600435602051811061089757600080fd5b5060e86044356004016101403760c86044356004013511156108b857600080fd5b60043533146108c657600080fd5b61014080600160073360e05260c052604060c02060243560e05260c052604060c02060c052602060c0200160c052602060c020602082510161012060006008818352015b8261012051602002111561091d5761093f565b61012051602002850151610120518501555b815160010180835281141561090a575b505050505050600160005260206000f350005b6384e234f86000511415610d3757341561096b57600080fd5b600435602051811061097c57600080fd5b50336101405260043561016052602435610180526000610140516020826102600101526020810190506101605160208261026001015260208101905061018051602082610260010152602081019050806102605261026090508051602001806101a0828460006004600a8704601201f16109f557600080fd5b50506000610160516020826103c0010152602081019050610180516020826103c0010152602081019050806103c0526103c09050805160200180610300828460006004600a8704601201f1610a4957600080fd5b5050600060043560e05260c052604060c0205460243510610a6957600080fd5b60086101a0516101c02060e05260c052604060c020541515610c8a57600160096101a0516101c02060e05260c052604060c020541415610ae857600060096101a0516101c02060e05260c052604060c02055600c610300516103202060e05260c052604060c020600181541015610adf57600080fd5b60018154038155505b600160086101a0516101c02060e05260c052604060c02055600b610300516103202060e05260c052604060c020805460018254011015610b2757600080fd5b6001815401815550610140610460525b61046051516020610460510161046052610440610460511015610b5957610b37565b6330e0789e61048052336104a0526004356104c05260046104e0526104e0516104c0516104a051600658016100e2565b61054052610420610460525b6104605152602061046051036104605261014061046051101515610bb857610b95565b61054050610140610560525b61056051516020610560510161056052610560610560511015610be657610bc4565b6330e0789e61058052336105a052600e546105c05260016105e0526105e0516105c0516105a051600658016100e2565b61064052610540610560525b6105605152602061056051036105605261014061056051101515610c4557610c22565b6106405060243561066052600435337fd36bef164b9617b19d82f8fcdec8d9e92ecdec8ec7758ed303e760d580028c466020610660a3600160005260206000f3610d2a565b600160086101a0516101c02060e05260c052604060c020541415610d2957600060086101a0516101c02060e05260c052604060c02055600b610300516103202060e05260c052604060c020600181541015610ce457600080fd5b600181540381555060243561044052600435337f2f8a5504faf7df392dba0c943733d0be4f5577296b01e0cc19cbeb500bf7eed16020610440a3600160005260206000f35b5b600060005260206000f350005b63c52af0ff600051141561108f573415610d5057600080fd5b6004356020518110610d6157600080fd5b50336101405260043561016052602435610180526000610140516020826102600101526020810190506101605160208261026001015260208101905061018051602082610260010152602081019050806102605261026090508051602001806101a0828460006004600a8704601201f1610dda57600080fd5b50506000610160516020826103c0010152602081019050610180516020826103c0010152602081019050806103c0526103c09050805160200180610300828460006004600a8704601201f1610e2e57600080fd5b5050600060043560e05260c052604060c0205460243510610e4e57600080fd5b60096101a0516101c02060e05260c052604060c020541515610fe257600160086101a0516101c02060e05260c052604060c020541415610ecd57600060086101a0516101c02060e05260c052604060c02055600b610300516103202060e05260c052604060c020600181541015610ec457600080fd5b60018154038155505b600160096101a0516101c02060e05260c052604060c02055600c610300516103202060e05260c052604060c020805460018254011015610f0c57600080fd5b6001815401815550610140610460525b61046051516020610460510161046052610440610460511015610f3e57610f1c565b6330e0789e61048052336104a052600e546104c05260056104e0526104e0516104c0516104a051600658016100e2565b61054052610420610460525b6104605152602061046051036104605261014061046051101515610f9d57610f7a565b6105405060243561056052600435337f3e59ec41817a3f5adf0e2fdb076fe3f9cf19354aefd7b55fd8b6a11d173578456020610560a3600160005260206000f3611082565b600160096101a0516101c02060e05260c052604060c02054141561108157600060096101a0516101c02060e05260c052604060c02055600c610300516103202060e05260c052604060c02060018154101561103c57600080fd5b600181540381555060243561044052600435337f856fae1a7746b63eea6a6a83cf787fba808b58908919a9df2ca8057949937e6e6020610440a3600160005260206000f35b5b600060005260206000f350005b6351414d0d60005114156111695734156110a857600080fd5b60043560205181106110b957600080fd5b5060243560205181106110cb57600080fd5b506004356101405260243561016052604435610180526000610140516020826102600101526020810190506101605160208261026001015260208101905061018051602082610260010152602081019050806102605261026090508051602001806101a0828460006004600a8704601201f161114657600080fd5b505060086101a0516101c02060e05260c052604060c0205460005260206000f350005b6368970729600051141561124357341561118257600080fd5b600435602051811061119357600080fd5b5060243560205181106111a557600080fd5b506004356101405260243561016052604435610180526000610140516020826102600101526020810190506101605160208261026001015260208101905061018051602082610260010152602081019050806102605261026090508051602001806101a0828460006004600a8704601201f161122057600080fd5b505060096101a0516101c02060e05260c052604060c0205460005260206000f350005b6325bc2e4b60005114156112f157341561125c57600080fd5b600435602051811061126d57600080fd5b5060043561014052602435610160526000610140516020826102400101526020810190506101605160208261024001015260208101905080610240526102409050805160200180610180828460006004600a8704601201f16112ce57600080fd5b5050600b610180516101a02060e05260c052604060c0205460005260206000f350005b637f5c0b9d600051141561139f57341561130a57600080fd5b600435602051811061131b57600080fd5b5060043561014052602435610160526000610140516020826102400101526020810190506101605160208261024001015260208101905080610240526102409050805160200180610180828460006004600a8704601201f161137c57600080fd5b5050600c610180516101a02060e05260c052604060c0205460005260206000f350005b631f4ff4c660005114156116935734156113b857600080fd5b60043560205181106113c957600080fd5b5033600435186113d857600080fd5b3361014052600435610160526000610140516020826102400101526020810190506101605160208261024001015260208101905080610240526102409050805160200180610180828460006004600a8704601201f161143657600080fd5b5050610160516102c052600a610180516101a02060e05260c052604060c0205415156115f2576001600a610180516101a02060e05260c052604060c02055600d6102c05160e05260c052604060c02080546001825401101561149757600080fd5b60018154018155506101406102e0525b6102e0515160206102e051016102e0526102e06102e05110156114c9576114a7565b6330e0789e61030052336103205260043561034052600461036052610360516103405161032051600658016100e2565b6103c0526102c06102e0525b6102e0515260206102e051036102e0526101406102e05110151561152857611505565b6103c0506101406103e0525b6103e0515160206103e051016103e0526103e06103e051101561155657611534565b6330e0789e610400523361042052600e5461044052600161046052610460516104405161042051600658016100e2565b6104c0526103c06103e0525b6103e0515260206103e051036103e0526101406103e0511015156115b557611592565b6104c050600435337f5ffe3cc8f1055f172e55be8d832143a6cffb4cb3a56a18bf780fd4112d4cecc760006000a3600160005260206000f3611686565b6001600a610180516101a02060e05260c052604060c020541415611685576000600a610180516101a02060e05260c052604060c02055600d6102c05160e05260c052604060c02060018154101561164857600080fd5b6001815403815550600435337f9d3d878d2fb01c43ad7ec7c20d8f5d0dbac4888df940a4edaab4540ccefdc10260006000a3600160005260206000f35b5b600060005260206000f350005b63aeafb39360005114156117535734156116ac57600080fd5b60043560205181106116bd57600080fd5b5060243560205181106116cf57600080fd5b5060043561014052602435610160526000610140516020826102400101526020810190506101605160208261024001015260208101905080610240526102409050805160200180610180828460006004600a8704601201f161173057600080fd5b5050600a610180516101a02060e05260c052604060c0205460005260206000f350005b634c05cede60005114156117aa57341561176c57600080fd5b600435602051811061177d57600080fd5b50600435610140526101405161016052600d6101605160e05260c052604060c0205460005260206000f350005b600015611868575b61018052610140526101605261014051610160516117cf57600080fd5b610160516101405115156117e457600061180a565b6101605161014051610160516101405102041461180057600080fd5b6101605161014051025b041461016051151761181b57600080fd5b61014051151561182c576000611852565b6101605161014051610160516101405102041461184857600080fd5b6101605161014051025b6101a0526101a051600052600051610180515650005b633610724e6000511415611a015760123360e05260c052604060c0205462093a8060123360e05260c052604060c020540110156118a457600080fd5b62093a8060123360e05260c052604060c020540142116118c357600080fd5b63165c4a166101405260043561016052600f54610180526101805161016051600658016117b2565b6101e0526101e05134146118fe57600080fd5b6103e8600435111561190f57600080fd5b6004356005600e5460e05260c052604060c02054101561192e57600080fd5b6101405161016051610180516101a0516101c0516101e0516330e0789e61022052600e5461024052336102605260043561028052610280516102605161024051600658016100e2565b6102e0526101e0526101c0526101a0526101805261016052610140526102e0506011805460043582540110156119ac57600080fd5b6004358154018155504260123360e05260c052604060c0205560043561030052337f4aff2c4e63da20aaa26764b3e97f557bf5e95b76ddba8f97a156abbecb0818466020610300a2600160005260206000f350005b636c11bcd36000511415611bca573415611a1a57600080fd5b60133360e05260c052604060c0205462093a8060133360e05260c052604060c02054011015611a4857600080fd5b62093a8060133360e05260c052604060c02054014211611a6757600080fd5b6103e86004351115611a7857600080fd5b60043560053360e05260c052604060c020541015611a9557600080fd5b6101405163165c4a16610180526004356101a0526010546101c0526101c0516101a051600658016117b2565b610220526101405261022051610140526101405161016051610180516101a0516101c0516101e05161020051610220516330e0789e610260523361028052600e546102a0526004356102c0526102c0516102a05161028051600658016100e2565b6103205261022052610200526101e0526101c0526101a05261018052610160526101405261032050600060006000600061014051336000f1611b6357600080fd5b601160043581541015611b7557600080fd5b6004358154038155504260133360e05260c052604060c0205560043561034052337f4f0a05c98d5132dc12d8adee36e2453f1d5bcfd87ae6c465e0d99e5fc8a3a0ba6020610340a2600160005260206000f350005b634de57d756000511415611bfe573415611be357600080fd5b600e543314611bf157600080fd5b303160005260206000f350005b63eb90b7ad6000511415611c5a573415611c1757600080fd5b600e543314611c2557600080fd5b30316004351115611c3557600080fd5b6000600060006000600435336000f1611c4d57600080fd5b600160005260206000f350005b63904866af6000511415611ca1573415611c7357600080fd5b6004356020518110611c8457600080fd5b50601260043560e05260c052604060c0205460005260206000f350005b6321ac0a3d6000511415611ce8573415611cba57600080fd5b6004356020518110611ccb57600080fd5b50601360043560e05260c052604060c0205460005260206000f350005b630815b9c86000511415611d0a57600e543314611d0457600080fd5b600e54ff005b6306fdde036000511415611ddc573415611d2357600080fd5b60018060c052602060c020610180602082540161012060006002818352015b82610120516020021115611d5557611d77565b61012051850154610120516020028501525b8151600101808352811415611d42575b5050505050506101e0610180516020818352015b60206101e0511115611d9c57611db8565b60006101e0516101a001535b8151600101808352811415611d8b575b50506020610160526040610180510160206001820306601f8201039050610160f350005b6395d89b416000511415611eae573415611df557600080fd5b60028060c052602060c020610180602082540161012060006002818352015b82610120516020021115611e2757611e49565b61012051850154610120516020028501525b8151600101808352811415611e14575b5050505050506101e0610180516020818352015b60206101e0511115611e6e57611e8a565b60006101e0516101a001535b8151600101808352811415611e5d575b50506020610160526040610180510160206001820306601f8201039050610160f350005b6318160ddd6000511415611ed5573415611ec757600080fd5b60035460005260206000f350005b63313ce5676000511415611efc573415611eee57600080fd5b60045460005260206000f350005b63dbf9f6526000511415611f23573415611f1557600080fd5b600f5460005260206000f350005b6366b57cb56000511415611f4a573415611f3c57600080fd5b60105460005260206000f350005b63518ab2a86000511415611f71573415611f6357600080fd5b60115460005260206000f350005b600e543314611f7f57600080fd5b600160005260206000f3",
  "source": "struct Video:\n    path: bytes[50]\n    title: bytes[200]\n\nTransfer: event({_from: indexed(address), _to: indexed(address), _value: uint256})\nApproval: event({_owner: indexed(address), _spender: indexed(address), _value: uint256})\nUploadVideo: event({_user: indexed(address), _index: uint256})\nLikeVideo: event({_video_liker: indexed(address), _video_uploader: indexed(address), _index: uint256})\nUnlikeVideo: event({_video_liker: indexed(address), _video_uploader: indexed(address), _index: uint256})\nDislikeVideo: event({_video_liker: indexed(address), _video_uploader: indexed(address), _index: uint256})\nUndislikeVideo: event({_video_liker: indexed(address), _video_uploader: indexed(address), _index: uint256})\nSubscribe: event({_user_from: indexed(address), _user_to: indexed(address)})\nUnsubscribe: event({_user_from: indexed(address), _user_to: indexed(address)})\nBuyTokens: event({_buyer: indexed(address), _amount: uint256})\nSellTokens: event({_seller: indexed(address), _amount: uint256})\n\nuser_videos_index: map(address, uint256)\n\nname: public(bytes[20])\nsymbol: public(bytes[3])\ntotalSupply: public(uint256)\ndecimals: public(uint256)\nbalances: map(address, uint256)\nallowed: map(address, map(address, uint256))\n\nall_videos: map(address, map(uint256, Video))\n\nlikes_videos: map(bytes[100], bool)\ndislikes_videos: map(bytes[100], bool)\nsubscribes_users: map(bytes[100], bool)\n\naggregate_likes: map(bytes[100], uint256)\naggregate_dislikes: map(bytes[100], uint256)\n\naggregate_subscribers: map(bytes32, uint256)\n\nadmin: address\ntokenBuyPrice: public(uint256)\ntokenSellPrice: public(uint256)\ntokensSold: public(uint256)\nlastTokenBuyTime: map(address, timestamp)\nlastTokenSellTime: map(address, timestamp)\n\n@public\ndef __init__():\n    _initialSupply: uint256 = 500\n    _decimals: uint256 = 3\n    self.totalSupply = _initialSupply * 10 ** _decimals\n    self.balances[msg.sender] = self.totalSupply\n    self.name = 'DecenTube Coin'\n    self.symbol = 'DTC'\n    self.decimals = _decimals\n\n\n    self.admin = msg.sender\n    self.tokenBuyPrice = 490000000000000\n    #5 rupees for buying a token (15th Dec)\n    self.tokenSellPrice = 470000000000000\n    #4.75 rupees for selling a token (15th Dec)\n    \n    log.Transfer(ZERO_ADDRESS, msg.sender, self.totalSupply)\n\n@public\n@constant\ndef balanceOf(_owner: address) -> uint256:\n    return self.balances[_owner]\n\n@private\ndef _transfer(_source: address, _to: address, _amount: uint256) -> bool:\n    assert self.balances[_source] >= _amount\n    self.balances[_source] -= _amount\n    self.balances[_to] += _amount\n    log.Transfer(_source, _to, _amount)\n\n    return True\n\n@public\ndef transfer(_to: address, _amount: uint256) -> bool:\n    return self._transfer(msg.sender, _to, _amount)\n\n@public\ndef transferFrom(_from: address, _to: address, _value: uint256) -> bool:\n    assert _value <= self.allowed[_from][msg.sender]\n    assert _value <= self.balances[_from]\n\n    self.balances[_from] -= _value\n    self.allowed[_from][msg.sender] -= _value\n    self.balances[_to] += _value\n    log.Transfer(_from, _to, _value)\n\n    return True\n\n@public\ndef approve(_spender: address, _amount: uint256) -> bool:\n    self.allowed[msg.sender][_spender] = _amount\n    log.Approval(msg.sender, _spender, _amount)\n\n    return True\n\n@public\n@constant\ndef allowance(_owner: address, _spender: address) -> uint256:\n    return self.allowed[_owner][_spender]\n\n@public\ndef upload_video(_video_path: bytes[50], _video_title: bytes[200]) -> bool:\n    _index: uint256 = self.user_videos_index[msg.sender]\n\n    self.all_videos[msg.sender][_index] = Video({ path: _video_path, title: _video_title })\n    self.user_videos_index[msg.sender] += 1\n\n    log.UploadVideo(msg.sender, _index)\n\n    return True\n\n@public\n@constant\ndef latest_videos_index(_user: address) -> uint256:\n    return self.user_videos_index[_user]\n\n@public\n@constant\ndef videos_path(_user: address, _index: uint256) -> bytes[50]:\n    return self.all_videos[_user][_index].path\n\n@public\n@constant\ndef videos_title(_user: address, _index: uint256) -> bytes[200]:\n    return self.all_videos[_user][_index].title\n\n@public\ndef rename_videos_title(_user: address, _index: uint256, _new_video_title: bytes[200]) -> bool:\n    assert (msg.sender == _user)\n    self.all_videos[msg.sender][_index].title = _new_video_title\n\n    return True\n\n@public\ndef like_video(_user: address, _index: uint256) -> bool:\n    _msg_sender_str: bytes32 = convert(msg.sender, bytes32)\n    _user_str: bytes32 = convert(_user, bytes32)\n    _index_str: bytes32 = convert(_index, bytes32)\n    _key: bytes[100] = concat(_msg_sender_str, _user_str, _index_str)\n    _likes_key: bytes[100] = concat(_user_str, _index_str)\n\n    assert _index < self.user_videos_index[_user]\n    if self.likes_videos[_key] == False:\n\n        #Check if Disliked already\n        if self.dislikes_videos[_key] == True:\n            self.dislikes_videos[_key] = False\n            self.aggregate_dislikes[_likes_key] -= 1\n\n        self.likes_videos[_key] = True\n        self.aggregate_likes[_likes_key] += 1\n        self._transfer(msg.sender, _user, 4)\n        self._transfer(msg.sender, self.admin, 1)\n        #20% cut\n        log.LikeVideo(msg.sender, _user, _index)\n\n        return True\n        \n    elif self.likes_videos[_key] == True:\n        self.likes_videos[_key] = False\n        self.aggregate_likes[_likes_key] -= 1\n        log.UnlikeVideo(msg.sender, _user, _index)\n\n        return True\n\n    return False\n\n\n\n@public\ndef dislike_video(_user: address, _index: uint256) -> bool:\n    _msg_sender_str: bytes32 = convert(msg.sender, bytes32)\n    _user_str: bytes32 = convert(_user, bytes32)\n    _index_str: bytes32 = convert(_index, bytes32)\n    _key: bytes[100] = concat(_msg_sender_str, _user_str, _index_str)\n    _dislikes_key: bytes[100] = concat(_user_str, _index_str)\n\n    assert _index < self.user_videos_index[_user]\n    if self.dislikes_videos[_key] == False:\n\n        #Check if Liked already\n        if self.likes_videos[_key] == True:\n            self.likes_videos[_key] = False\n            self.aggregate_likes[_dislikes_key] -= 1\n\n        self.dislikes_videos[_key] = True\n        self.aggregate_dislikes[_dislikes_key] += 1\n        self._transfer(msg.sender, self.admin, 5)\n        log.DislikeVideo(msg.sender, _user, _index)\n\n        return True\n        \n    elif self.dislikes_videos[_key] == True:\n        self.dislikes_videos[_key] = False\n        self.aggregate_dislikes[_dislikes_key] -= 1\n        log.UndislikeVideo(msg.sender, _user, _index)\n\n        return True\n\n    return False\n\n\n@public\n@constant\ndef video_has_been_liked(_user_like: address, _user_video: address, _index: uint256) -> bool:\n    _user_like_str: bytes32 = convert(_user_like, bytes32)\n    _user_video_str: bytes32 = convert(_user_video, bytes32)\n    _index_str: bytes32 = convert(_index, bytes32)\n    _key: bytes[100] = concat(_user_like_str, _user_video_str, _index_str)\n\n    return self.likes_videos[_key]\n\n@public\n@constant\ndef video_has_been_disliked(_user_dislike: address, _user_video: address, _index: uint256) -> bool:\n    _user_dislike_str: bytes32 = convert(_user_dislike, bytes32)\n    _user_video_str: bytes32 = convert(_user_video, bytes32)\n    _index_str: bytes32 = convert(_index, bytes32)\n    _key: bytes[100] = concat(_user_dislike_str, _user_video_str, _index_str)\n\n    return self.dislikes_videos[_key]\n\n@public\n@constant\ndef video_aggregate_likes(_user_video: address, _index: uint256) -> uint256:\n    _user_video_str: bytes32 = convert(_user_video, bytes32)\n    _index_str: bytes32 = convert(_index, bytes32)\n    _key: bytes[100] = concat(_user_video_str, _index_str)\n\n    return self.aggregate_likes[_key]\n\n@public\n@constant\ndef video_aggregate_dislikes(_user_video: address, _index: uint256) -> uint256:\n    _user_video_str: bytes32 = convert(_user_video, bytes32)\n    _index_str: bytes32 = convert(_index, bytes32)\n    _key: bytes[100] = concat(_user_video_str, _index_str)\n\n    return self.aggregate_dislikes[_key]\n\n\n@public\ndef subscribe_user(_user_to: address) -> bool:\n    assert _user_to != msg.sender\n\n    _user_from_str: bytes32 = convert(msg.sender, bytes32)\n    _user_to_str: bytes32 = convert(_user_to, bytes32)\n    _key: bytes[100] = concat(_user_from_str, _user_to_str)\n    _subscribes_key: bytes32 = _user_to_str\n\n    if self.subscribes_users[_key] == False:\n\n        self.subscribes_users[_key] = True\n        self.aggregate_subscribers[_subscribes_key] += 1\n        self._transfer(msg.sender, _user_to, 4)\n        self._transfer(msg.sender, self.admin, 1)\n        #20% CUT\n        log.Subscribe(msg.sender, _user_to)\n\n        return True\n        \n    elif self.subscribes_users[_key] == True:\n        self.subscribes_users[_key] = False\n        self.aggregate_subscribers[_subscribes_key] -= 1\n        log.Unsubscribe(msg.sender, _user_to)\n\n        return True\n    \n    return False\n\n@public\n@constant\ndef user_has_subscribed(_user_from: address, _user_to: address) -> bool:\n    _user_from_str: bytes32 = convert(_user_from, bytes32)\n    _user_to_str: bytes32 = convert(_user_to, bytes32)\n    _key: bytes[100] = concat(_user_from_str, _user_to_str)\n\n    return self.subscribes_users[_key]\n\n@public\n@constant\ndef user_aggregate_subscribers(_user: address) -> uint256:\n    _user_str: bytes32 = convert(_user, bytes32)\n    _key: bytes32 = _user_str\n\n    return self.aggregate_subscribers[_key]\n\n@private\n@constant\ndef multiply(x: uint256, y:uint256) -> uint256:\n    assert(y == 0 or (x * y) / y == x)\n    z:uint256 = x * y\n\n    return z\n\n@public\n@payable\ndef buyTokens (_numberOfTokens: uint256) -> bool:\n\n    assert(block.timestamp > self.lastTokenBuyTime[msg.sender] + 604800)\n    #ONE WEEK GAP\n    assert(msg.value == self.multiply(_numberOfTokens, self.tokenBuyPrice))\n    assert(_numberOfTokens <= 1000)\n    assert(self.balances[self.admin] >= _numberOfTokens)\n\n    self._transfer(self.admin, msg.sender, _numberOfTokens)\n\n    self.tokensSold += _numberOfTokens\n\n    self.lastTokenBuyTime[msg.sender] = block.timestamp\n\n    log.BuyTokens(msg.sender, _numberOfTokens)\n    return True\n\n@public\ndef sellTokens (_numberOfTokens: uint256) -> bool:\n\n    assert(block.timestamp > self.lastTokenSellTime[msg.sender] + 604800)\n    #ONE WEEK GAP\n    assert(_numberOfTokens <= 1000)\n    assert(self.balances[msg.sender] >= _numberOfTokens)\n\n    _amount_to_pay_user: uint256 = self.multiply(_numberOfTokens, self.tokenSellPrice)\n\n    self._transfer(msg.sender, self.admin, _numberOfTokens)\n    send(msg.sender, _amount_to_pay_user)\n    self.tokensSold -= _numberOfTokens\n    self.lastTokenSellTime[msg.sender] = block.timestamp\n    log.SellTokens(msg.sender, _numberOfTokens)\n    return True\n\n@public\n@constant\ndef getContractEthBalance() -> uint256(wei):\n    assert (msg.sender == self.admin)\n    return self.balance\n\n\n@public\ndef withdrawContractEthBalance(_amount: uint256) -> bool:\n    assert (msg.sender == self.admin)\n    assert(_amount <= self.balance)\n    send(msg.sender, _amount)\n    return True\n\n@public\n@payable\ndef __default__() -> bool:\n    assert (msg.sender == self.admin)\n    return True\n\n@public\n@constant\ndef getBuyTimeStampValue(_user: address) -> timestamp:\n    return self.lastTokenBuyTime[_user]\n\n@public\n@constant\ndef getSellTimeStampValue(_user: address) -> timestamp:\n    return self.lastTokenSellTime[_user]\n\n@public\n@payable\ndef destroyEntireSmartContract() -> bool:\n    assert (msg.sender == self.admin)\n    selfdestruct(self.admin)\n\n    \n\n\n",
  "sourcePath": "E:/Projects/video_contract/contracts/VideosSharing.vy",
  "compiler": {
    "name": "vyper",
    "version": "0.1.0b12+commit.a01cdc8"
  },
  "networks": {
    "3": {
      "events": {},
      "links": {},
      "address": "0x6B5F1D286b4E0d2927659b10dEb6FcE4C25aEd79",
      "transactionHash": "0x30d0d69ebe02c9749698a003ac26b674983feaee2b71adff03dc82d2694feb4f"
    }
  },
  "schemaVersion": "3.0.15",
  "updatedAt": "2019-12-16T07:21:37.728Z"
}